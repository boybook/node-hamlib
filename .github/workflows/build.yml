name: Build Precompiled Binaries

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
            target: linux-x64
            hamlib_install: |
              sudo apt-get update
              sudo apt-get install -y libhamlib-dev libhamlib-utils
          - os: ubuntu-24.04-arm
            arch: arm64
            target: linux-arm64
            hamlib_install: |
              sudo apt-get update
              sudo apt-get install -y libhamlib-dev libhamlib-utils
          # - os: windows-latest
          #   arch: x64
          #   target: win32-x64
          #   hamlib_install: echo "Windows hamlib will be built from source"
          - os: macos-latest
            arch: arm64
            target: darwin-arm64
            hamlib_install: |
              brew install hamlib
              pip3 install setuptools --break-system-packages || true

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Hamlib dependencies
      run: ${{ matrix.hamlib_install }}

    - name: Install Node.js dependencies
      run: npm ci

    - name: Build node-hamlib
      run: npm run build

    - name: Create binary package
      shell: bash
      run: |
        mkdir -p prebuilds/${{ matrix.target }}
        if [ -f "build/Release/hamlib.node" ]; then
          cp build/Release/hamlib.node prebuilds/${{ matrix.target }}/
          echo "Binary package created successfully"
        else
          echo "Error: hamlib.node not found"
          exit 1
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}
        path: prebuilds/${{ matrix.target }}


